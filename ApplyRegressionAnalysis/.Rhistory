#2.1
A = matrix(1,0,0,1, nrows =2)
#2.1
A = matrix(1,0,0,1, nrow =2)
#2.1
A = matrix(c(1,0,0,1), nrow =2)
A
#2.1
A = matrix(c(1,0,0,1), nr=2)
A
lambda1 = eigen(A)
lambda1
t(A)
t(A)%*%A
#2.2
A = matrix(c(1,-1,2,-1,3,3,2,3,4),nr=3)
A
B = matrix(c(3,-2,4,-2,1,0,4,0,2),nr=3)
x = c(1,2,3)
x = c(1,2,3)
y = c(3,5,4)
A+B
t(A)
t(x)
x
t(x)%*%A%*%y
t(x)%*%x
t(x)%*%A%*%x
t(x)%*%y
t(A)%*%A
A%*%B
t(y)%*%B
x%*%t(x)
x+y
x-y
t(x-y)
x%*%t(y)
A-B
t(A)+t(B)
t(A+B)
3*x
(t(x)%*%y)%*%(t(x)%*%y)
B%*%A
rank(A)
rankMatrix(A)
library(MASS)
library(MASS)
#2.1
A1 = matrix(c(1,0,0,1), nr=2)
ginv(A1)
library(Matrix)
rankMatrix(A)
ginv(A)
sum(diag(A))
sum(diag(B))
sum(diag(A))+sum(diag(B))
sum(diag(A%*%B))
sum(diag(A%*%B)) == sum(diag(B%*%A))
t(A%*%B) == t(B)%*%t(A)
#2.3
A = matrix(c(2,1,1,4),nr = 2)
nrow(A)
row_vector <- A[1, ]
column_vector <- A[, 1]
plot(row_vector)
row_vector
row_vector2 <- A[2, ]
plot(row_vector1, row_vector2)
row_vector1 <- A[1, ]
plot(row_vector1, row_vector2)
row_vector1
row_vector2
column_vector1 <- A[, 1]
column_vector2 <- A[,2]
column_vector1
column_vector2
plot(column_vector1,column_vector2)
rankMatrix(A)
eigen(A)
t(A)
eigen(A)$vectors
eigen(A)$vectors%*%eigen(A)$values%*%t(eigen(A)$vectors)
t(eigen(A)$vectors)
eigen(A)$values
eigen(A)$values
eigen(A)$values[1]
lambda = matrix(c(eigen(A)$values[1],0,0,eigen(A)$values[2]),nrow=2)
eigen(A)$vectors%*%lambda%*%t(eigen(A)$vectors)
eigen(ginv(A))
t(A)%*%A
eigen(t(A)%*%A)
ginv(t(A)%*%A)
A2 <- (t(A)%*%A)%*%(t(A)%*%A)
A2
eigen(A2)
lambda = matrix(c(eigen(A2)$values[1],0,0,eigen(A2)$values[2]),nrow=2)
eigen(A2)$vectors%*%lambda%*%t(eigen(A2)$vectors)
#2.4
D = matrix(c(1,0,0,0,9,0,0,0,16),nr=3)
rankMatrix(D)
eigen(D)
t(D)
lambda = lambda = matrix(c(eigen(D)$values[1],0,0,eigen(D)$values[2]),nrow=2)
eigen(A)$vectors%*%lambda%*%t(eigen(A)$vectors)
lambda = lambda = matrix(c(eigen(D)$values[1],0,0,0,eigen(D)$values[2],0,0,0,eigen(D)$values[3]),nrow=3)
eigen(A)$vectors%*%lambda%*%t(eigen(A)$vectors)
eigen(D)$vectors%*%lambda%*%t(eigen(D)$vectors)
eigen(rankMatrix(D))
tr(D)
trace(D)
cov2cor(D)
det(D)
eigen(D)$values
det(D) == eigen(D)$values[1]*eigen(D)$values[2]*eigen(D)$values[3]
det(D) == prod(eigens$values)
det(D) == prod(eigens$values)
det(D) == prod(eigen(D)$values)
sum(diag(D)) == sum(eigen(D)$values)
#2.4
D = matrix(c(1,0,0,0,9,0,0,0,16),nr=3)
rankMatrix(D)
eigen(D)
t(D)
lambda =  matrix(c(eigen(D)$values[1],0,0,0,eigen(D)$values[2],0,0,0,eigen(D)$values[3]),nrow=3)
eigen(D)$vectors%*%lambda%*%t(eigen(D)$vectors)
eigen(rankMatrix(D))
cov2cor(D)
det(D) == prod(eigen(D)$values)
sum(diag(D)) == sum(eigen(D)$values)
ginv(D)
#2.5
A = matrix(c(5,-4,3,-4,8,6,3,6,9),nr=3)
eigen(A)
sum(diag(A)) == sum(egien(A)$values)
sum(diag(A)) == sum(eigen(A)$values)
det(A) == prod(eigen(A)$values)
ginv(A)
#3.4
x<-runif(100,0,10)
?runif
y<-2+3*x+rnorm(1000,0,1)
plot(x,y)
d<-lm(x.y)
d<-lm(x,y)
d<-lm(y~x)
plot(x,y)
y<-2+3*x+rnorm(100,0,1)
plot(x,y)
d<-lm(y~x)
cor(x,y)
d
plot(d)
abline(lm(y~x))
abline(d))
abline(d)
plot(x,y)
d<-lm(y~x)
cor(x,y)
abline(d)
lm(y~x)
summary(d)
confint(d, level = 0.95)
confint(d$coefficients, level = 0.95)
d$coefficients
d$coefficients$x
d$coefficients
d$fitted.values
confint(d$coefficients, level = 0.95)
confint(d, level = 0.95)
summary(d)
library(lmtest)
dwtest(d)
qqnorm(d)
qqnorm(d$residuals)
dwtest(d$residuals)
dwtest(d)
residuals(d)
plot(x,d)
plot(x,residuals(d))
dwtest(d)
qqnorm(d$residuals)
library(readxl)
table3_5_campaign <- read_excel("C:/대학교/3학년/2학기/응용회귀분석/R회귀분석자료/회귀분석_데이터/table3.5_campaign.xlsx")
View(table3_5_campaign)
View(table3_5_campaign)
#3.5
table3_5_campaign
x<-table3_5_campaign$X
y<-table3_5_campaign$y
y<-table3_5_campaign$Y
plot(x,y)
cor(x,y)
l = lm(y~x)
l
abline(l)
summary(;)
summary(l)
confint(l, level=0.95)
residuals(l)
sum(residuals(l)^2)
plot(x,residuals(l))
dwtest(l)
qqplot(l)
qqnomr(residuas(l))
qqnomr(residuals(l))
qqnorm(residuals(l))
l
predict(l,newdata = data.frame(50))
predict(l,newdata = data.frame(x=50))
#3.6
library(faraway)
install.packages('faraway')
#3.6
library(faraway)
data("stat500")
stat500
stat500<-data.frame(scale(stat500))
plot(final~midterm, stat500)
abline(0,1)
?abline
?scale
plot(final~midterm, stat500)
plot(final~~midterm, stat500)
plot(final~midterm, stat500)
abline(0,1)
cor(final,midterm)
cor(final,midterm,data=stat500)
?cor
cor(stat500$final,stat500$midterm)
?lm
plot(final~midterm, stat500)
lm(final~midterm,data = stat500)
l<-lm(y~x -1)
summary(l)
l<-lm(stat500$final~stat500$midterm -1)
summary(l)
l1l=m(final~midterm,data = stat500)
l1=lm(final~midterm,data = stat500)
l2<-lm(stat500$final~stat500$midterm -1)
summary(l1)
attach(stat500)
matplot(midterm, final)
?matplot
matplot(midterm, final,type='p')
matplot(midterm, final,type='p',)
matplot(midterm, final,type='p',)
type=''
?matplot
plot(final~midterm)
matplot(midterm, final,type='p',)
plot(final~midterm)
matplot(midterm, final,type='p',)
plot(final~midterm)
range(midterm)
matplot(range(midterm), predict(l1),type='p',)
matplot(midterm, predict(l1),type='p',)
plot(final~midterm)
matplot(midterm, predict(l1),type='p',)
matplot(final~midterm)
matplot(final,midterm)
plot(final~midterm)
matplot(l1,type='p',)
?range
range(midterm,midterm)
x1<-c(1,2,3,4,5)
x2=c(4,7,9,2,3)
range(x1,x2)
matplot(range(midterm),cbind(predict(l1),predict(l2),type='l')
matplot(range(midterm),cbind(predict(l1),predict(l2),type='l',col = c("blue", "red"), xlab = "x", ylab = "y", main = "두 개의 회귀직선")
matplot(range(midterm),cbind(predict(l1),predict(l2)),type='l',col = c("blue", "red"), xlab = "x", ylab = "y", main = "두 개의 회귀직선")
matplot(range(midterm),cbind(predict(l1),predict(l2)),type='l')
matplot(midterm,cbind(predict(l1),predict(l2)),type='l')
matplot(midterm,predict(l1),type='l')
matplot(midterm,predict(l2))
matplot(midterm,predict(l2),type='l')
matplot(midterm,predict(l2),type='n')
matplot(midterm,predict(l1),type='n')
matplot(midterm,predict(l2),type='n')
matplot(midterm,predict(l1),predict(l2),type='n')
matplot(midterm,predict(l1),predict(l2),type='l')
matplot(midterm,predict(l1),predict(l2),type='l')
matplot(midterm,predict(l1),,type='l')
matplot(midterm,predict(l1),type='l')
plot(final~midterm)
matplot(midterm,predict(l1),type='l')
lines(midterm,predict(l1))
lines(midterm,predict(l2))
lines(midterm,predict(l1))
lines(midterm,predict(l2),color='red')
lines(midterm,predict(l2),col='red')
lines(midterm,predict(l2))
lines(midterm,predict(l2))
lines(midterm,predict(l2))
lines(midterm,predict(l1))
lines(midterm,predict(l1))
lines(midterm,predict(l2))
matplot(midterm,data.frame(predict(l1),predict(l2)))
matplot(midterm,data.frame(predict(l1),predict(l2)),type=l)
matplot(midterm,data.frame(predict(l1),predict(l2)),type='l')
matplot(midterm,data.frame(predict(l1),predict(l2)),type='l',pch = c(1,2),col = c('red','blue'))
plot(final~midterm, stat500)
matplot(midterm,data.frame(predict(l1),predict(l2)),type='l',pch = c(1,2),col = c('red','blue'))
plot(final~midterm, stat500)
lines(midterm,data.frame(predict(l1),predict(l2)),type='l',pch = c(1,2),col = c('red','blue'))
lines(midterm,predict(l1))
lines(midterm,predict(l2))
lines(midterm,predict(l1),col='red')
lines(midterm,predict(l2),col='blue')
data("stat500")
attach(stat500)
plot(final~midterm, stat500)
lines(midterm,predict(l1),col='red')
lines(midterm,predict(l2),col='blue')
l1=lm(final~midterm,data = stat500)
l2<-lm(stat500$final~stat500$midterm -1)
lines(midterm,predict(l1),col='red')
lines(midterm,predict(l2),col='blue')
l2
summary(;1)
summary(l1)
summary(l2)
#3.7
data(women)
plot(weight~height)
plot(height,weight)
attach(women)
plot(height,weight)
plot(weight,height)
l = lm(height~weight)
abline(l)
summary(l)
plot(l)
plot(l)
plot(l)
catfish <- read_excel("C:/대학교/3학년/2학기/응용회귀분석/R회귀분석자료/회귀분석_데이터/table3.6_catfish.xlsx")
View(catfish)
#3.8
catfish
attach(catfish)
plot(Y~X)
cor(X,Y)
l = lm(Y~X)
l
abline(l)
summary(l)
confint(l,level=0.95)
